<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="1"
 universal="password">
    <ThingTemplates>
        <ThingTemplate
         baseThingTemplate="GenericThing"
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         homeMashup=""
         inheritedValueStream=""
         name="FoodTruckThingTemplate"
         projectName="myproject"
         tags=""
         thingPackage=""
         valueStream="Foodtruck.VS">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="Admin"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ServiceEngineer"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="FoodTruckOrg"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="Checkpoint1"></AlertDefinitions>
                <AlertDefinitions
                 name="Checkpoint2"></AlertDefinitions>
                <AlertDefinitions
                 name="Checkpoint3"></AlertDefinitions>
                <AlertDefinitions
                 name="Checkpoint4"></AlertDefinitions>
                <AlertDefinitions
                 name="Destination"></AlertDefinitions>
                <AlertDefinitions
                 name="Fuellevel"></AlertDefinitions>
                <AlertDefinitions
                 name="GasMessage"></AlertDefinitions>
                <AlertDefinitions
                 name="GasSensor"></AlertDefinitions>
                <AlertDefinitions
                 name="Humidity"></AlertDefinitions>
                <AlertDefinitions
                 name="Humidity_sensor"></AlertDefinitions>
                <AlertDefinitions
                 name="Oillevel"></AlertDefinitions>
                <AlertDefinitions
                 name="Pressure"></AlertDefinitions>
                <AlertDefinitions
                 name="StartingPoint"></AlertDefinitions>
                <AlertDefinitions
                 name="StartingPoint_Name"></AlertDefinitions>
                <AlertDefinitions
                 name="Temperature"></AlertDefinitions>
                <AlertDefinitions
                 name="Temperature_sensor"></AlertDefinitions>
                <AlertDefinitions
                 name="Truck_ID"></AlertDefinitions>
                <AlertDefinitions
                 name="Truck_NAME"></AlertDefinitions>
                <AlertDefinitions
                 name="Truck_Status"></AlertDefinitions>
                <AlertDefinitions
                 name="TruckLocation"></AlertDefinitions>
                <AlertDefinitions
                 name="TruckLocation_Name"></AlertDefinitions>
            </AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Checkpoint1"
                     ordinal="2"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Checkpoint2"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Checkpoint3"
                     ordinal="4"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Checkpoint4"
                     ordinal="5"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Destination"
                     ordinal="6"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     aspect.maximumValue="70.0"
                     aspect.minimumValue="0.0"
                     aspect.units="litres"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Fuellevel"
                     ordinal="17"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="GasMessage"
                     ordinal="22"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     aspect.maximumValue="1000.0"
                     aspect.minimumValue="100.0"
                     aspect.units="ppm"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="GasSensor"
                     ordinal="12"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Humidity"
                     ordinal="14"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Humidity_sensor"
                     ordinal="15"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Oillevel"
                     ordinal="17"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Pressure"
                     ordinal="18"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="StartingPoint"
                     ordinal="20"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="StartingPoint_Name"
                     ordinal="21"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Temperature"
                     ordinal="13"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Temperature_sensor"
                     ordinal="16"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="false"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Truck_ID"
                     ordinal="9"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Truck_NAME"
                     ordinal="10"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="false"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Truck_Status"
                     ordinal="11"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isPersistent="true"
                     baseType="LOCATION"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="TruckLocation"
                     ordinal="21"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="STRING"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="TruckLocation_Name"
                     ordinal="19"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions></ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations></ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="GasSubscription"
                     source=""
                     sourceProperty="GasSensor"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="GasSubscription">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 dataShapeName=""
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            try {
                                                let flag=false;
                                                if(me.GasSensor>500) {
                                                    me.GasMessage="Higher Gas Leakage: "+me.GasSensor;
                                                    flag=true;
                                                    
                                            } 
                                                else{
                                                    me.GasMessage=" ";
                                                }
                                            
                                                if(flag){
                                                    
                                                    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(AlertData)
                                            let streamEntryValues = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                                infoTableName: "InfoTable",
                                                dataShapeName: "AlertData"
                                            });
                                            
                                             
                                            
                                            // AlertData entry object
                                            let streamEntry = {
                                                AlertMessage: me.GasMessage,// STRING
                                                AlertTime: eventTime,// DATETIME
                                                AlertIsAcknowledged: false,// BOOLEAN
                                                AckMessage: "",// STRING
                                                
                                            };
                                                  
                                            streamEntryValues.AddRow(streamEntry);
                                            
                                             
                                            
                                                    
                                                Things["FoodTruck_AlertDataStream"].AddStreamEntry({
                                                sourceType: undefined /* STRING */,
                                                values: streamEntryValues /* INFOTABLE */,
                                                location: undefined /* LOCATION */,
                                                source: me.Truck_ID/* STRING */,
                                                timestamp: undefined /* DATETIME */,
                                                tags: undefined /* TAGS */
                                            });   
                                            }   
                                            } catch(err) {
                                                logger.error("Error occurred in " + me.name + " in [GasSubscription] : on line " + err.lineNumber + ": " + err.message);
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="HumiditySubsciption"
                     source=""
                     sourceProperty="Humidity"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="HumiditySubsciption">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 dataShapeName=""
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            try {
                                                let flag=false;
                                                if(me.Humidity>60) {
                                                    me.Humidity_sensor="High Humidity: "+me.Humidity;
                                                    flag=true;
                                                    
                                            } 
                                                else if(me.Humidity<30) {
                                                     me.Humidity_sensor="Low Humidity: "+me.Humidity;
                                                    flag=true;
                                            }
                                                else{
                                                    me.Humidity_sensor=" ";
                                                }
                                            
                                             
                                            
                                                if(flag){
                                                    
                                                    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(AlertData)
                                            let streamEntryValues = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                                infoTableName: "InfoTable",
                                                dataShapeName: "AlertData"
                                            });
                                            
                                             
                                            
                                            // AlertData entry object
                                            let streamEntry = {
                                                AlertMessage: me.Humidity_sensor,// STRING
                                                AlertTime: eventTime,// DATETIME
                                                AlertIsAcknowledged: false,// BOOLEAN
                                                AckMessage: "",// STRING
                                                
                                            };
                                                  
                                            streamEntryValues.AddRow(streamEntry);
                                            
                                             
                                            
                                                    
                                                Things["FoodTruck_AlertDataStream"].AddStreamEntry({
                                                sourceType: undefined /* STRING */,
                                                values: streamEntryValues /* INFOTABLE */,
                                                location: undefined /* LOCATION */,
                                                source: me.name /* STRING */,
                                                timestamp: undefined /* DATETIME */,
                                                tags: undefined /* TAGS */
                                            });   
                                            }   
                                            } catch(err) {
                                                logger.error("Error occurred in " + me.name + " in [HumiditySubscription] : on line " + err.lineNumber + ": " + err.message);
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="DataChange"
                     name="TemperatureWarnings"
                     source=""
                     sourceProperty="Temperature"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="TemperatureWarnings">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 dataShapeName=""
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            try {
                                                let flag=false;
                                                if(me.Temperature>20) {
                                                    me.Temperature_sensor="High Temperature: "+me.Temperature;
                                                    flag=true;
                                                    
                                            } 
                                                else if(me.Temperature<0) {
                                                     me.Temperature_sensor="Low Temperature: "+me.Temperature;
                                                    flag=true;
                                            }
                                                else{
                                                    me.Temperature_sensor=" ";
                                                }
                                            
                                             
                                            
                                                if(flag){
                                                    
                                                    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(AlertData)
                                            let streamEntryValues = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                                infoTableName: "InfoTable",
                                                dataShapeName: "AlertData"
                                            });
                                            
                                             
                                            
                                            // AlertData entry object
                                            let streamEntry = {
                                                AlertMessage: me.Temperature_sensor,// STRING
                                                AlertTime: eventTime,// DATETIME
                                                AlertIsAcknowledged: false,// BOOLEAN
                                                AckMessage: "",// STRING
                                                
                                            };
                                                  
                                            streamEntryValues.AddRow(streamEntry);
                                            
                                             
                                            
                                                    
                                                Things["FoodTruck_AlertDataStream"].AddStreamEntry({
                                                sourceType: undefined /* STRING */,
                                                values: streamEntryValues /* INFOTABLE */,
                                                location: undefined /* LOCATION */,
                                                source: me.Truck_ID /* STRING */,
                                                timestamp: undefined /* DATETIME */,
                                                tags: undefined /* TAGS */
                                            });   
                                            }   
                                            } catch(err) {
                                                logger.error("Error occurred in " + me.name + " in [TemperatureSubscription] : on line " + err.lineNumber + ": " + err.message);
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <ImplementedShapes></ImplementedShapes>
            <SharedConfigurationTables></SharedConfigurationTables>
            <InstanceDesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility></Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
